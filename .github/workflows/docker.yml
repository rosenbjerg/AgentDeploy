name: Docker

on:
  push:
    branches: [ release ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup QEMU
      uses: docker/setup-qemu-action@v1
      with:
        platforms: arm64,arm
      

    - name: Build amd64 agentd server image
      run: |
        SERVER_VERSION=$(cat server/AgentDeploy.ExternalApi/AgentDeploy.ExternalApi.csproj | grep '<PackageVersion>' | sed 's/.*<PackageVersion>\(.*\)<\/PackageVersion>/\1/' | tr -d '[[:space:]]' | sed -E s/\.[0-9]+$//)
        MAJOR_SERVER_VERSION=$(echo "$SERVER_VERSION" | sed -E s/\.[0-9]+$//)

        docker build -f container/server/Dockerfile \
          -t "mrosenbjerg/agentd-server:${SERVER_VERSION}-amd64" \
          -t "mrosenbjerg/agentd-server:${MAJOR_SERVER_VERSION}-amd64" \
          server

    - name: Build arm64v8 agentd server image
      run: |
        SERVER_VERSION=$(cat server/AgentDeploy.ExternalApi/AgentDeploy.ExternalApi.csproj | grep '<PackageVersion>' | sed 's/.*<PackageVersion>\(.*\)<\/PackageVersion>/\1/' | tr -d '[[:space:]]' | sed -E s/\.[0-9]+$//)
        MAJOR_SERVER_VERSION=$(echo "$SERVER_VERSION" | sed -E s/\.[0-9]+$//)

        docker build -f container/server/Dockerfile \
          -t "mrosenbjerg/agentd-server:${SERVER_VERSION}-arm64v8" \
          -t "mrosenbjerg/agentd-server:${MAJOR_SERVER_VERSION}-arm64v8" \
          --build-arg BASE_IMAGE=arm64v8/alpine \
          --build-arg DOTNET_RID=linux-musl-arm64 \
          --build-arg TINI_BUILD=tini-static-arm64 \
          server

    - name: Build arm32v7 agentd server image
      run: |
        SERVER_VERSION=$(cat server/AgentDeploy.ExternalApi/AgentDeploy.ExternalApi.csproj | grep '<PackageVersion>' | sed 's/.*<PackageVersion>\(.*\)<\/PackageVersion>/\1/' | tr -d '[[:space:]]' | sed -E s/\.[0-9]+$//)
        MAJOR_SERVER_VERSION=$(echo "$SERVER_VERSION" | sed -E s/\.[0-9]+$//)

        docker build -f container/server/Dockerfile \
          -t "mrosenbjerg/agentd-server:${SERVER_VERSION}-arm32v7" \
          -t "mrosenbjerg/agentd-server:${MAJOR_SERVER_VERSION}-arm32v7" \
          --build-arg BASE_IMAGE=arm32v7/alpine \
          --build-arg DOTNET_RID=linux-musl-arm \
          --build-arg TINI_BUILD=tini-static-armhf \
          server


    - name: Build amd64 agentd client image
      run: |
        CLIENT_VERSION=$(cat client/package.json | grep version | head -1 | awk -F: '{ print $2 }' | sed 's/[",]//g' | tr -d '[[:space:]]' | sed -E s/\.[0-9]+$//)
        MAJOR_CLIENT_VERSION=$(echo "$CLIENT_VERSION" | sed -E s/\.[0-9]+$//)
        
        docker build -f container/client/Dockerfile \
          -t "mrosenbjerg/agentd-client:${CLIENT_VERSION}-amd64" \
          -t "mrosenbjerg/agentd-client:${MAJOR_CLIENT_VERSION}-amd64" \
          client
        
    - name: Build arm64v8 agentd client image
      run: |
        CLIENT_VERSION=$(cat client/package.json | grep version | head -1 | awk -F: '{ print $2 }' | sed 's/[",]//g' | tr -d '[[:space:]]' | sed -E s/\.[0-9]+$//)
        MAJOR_CLIENT_VERSION=$(echo "$CLIENT_VERSION" | sed -E s/\.[0-9]+$//)

        docker build -f container/client/Dockerfile \
          -t "mrosenbjerg/agentd-client:${CLIENT_VERSION}-arm64v8" \
          -t "mrosenbjerg/agentd-client:${MAJOR_CLIENT_VERSION}-arm64v8" \
          --build-arg BASE_IMAGE=arm64v8/alpine \
          --build-arg PKG_TARGET=node16-linuxstatic-arm64 \
          --build-arg TINI_BUILD=tini-static-arm64 \
          client
        
    - name: Build arm32v7 agentd client image
      run: |
        CLIENT_VERSION=$(cat client/package.json | grep version | head -1 | awk -F: '{ print $2 }' | sed 's/[",]//g' | tr -d '[[:space:]]' | sed -E s/\.[0-9]+$//)
        MAJOR_CLIENT_VERSION=$(echo "$CLIENT_VERSION" | sed -E s/\.[0-9]+$//)

        docker build -f container/client/Dockerfile \
          -t "mrosenbjerg/agentd-client:${CLIENT_VERSION}-arm32v7" \
          -t "mrosenbjerg/agentd-client:${MAJOR_CLIENT_VERSION}-arm32v7" \
          --build-arg BASE_IMAGE=arm32v7/alpine \
          --build-arg PKG_TARGET=node16-linuxstatic-armv7 \
          --build-arg TINI_BUILD=tini-static-armhf \
          client


    - name: Login to Docker Hub
      run: docker login --username mrosenbjerg --password ${{ secrets.DOCKER_TOKEN }}
      
    - name: Push agentd client image
      run: docker push --all-tags mrosenbjerg/agentd-client

    - name: Push agentd server image
      run: docker push --all-tags mrosenbjerg/agentd-server


    - name: Create and push specific versioned agentd server manifest
      env:
        DOCKER_CLI_EXPERIMENTAL: enabled
      run: |
        SERVER_VERSION=$(cat server/AgentDeploy.ExternalApi/AgentDeploy.ExternalApi.csproj | grep '<PackageVersion>' | sed 's/.*<PackageVersion>\(.*\)<\/PackageVersion>/\1/' | tr -d '[[:space:]]' | sed -E s/\.[0-9]+$//)

        docker manifest create mrosenbjerg/agentd-server:${SERVER_VERSION} \
          mrosenbjerg/agentd-server:${SERVER_VERSION}-amd64 \
          mrosenbjerg/agentd-server:${SERVER_VERSION}-arm64v8 \
          mrosenbjerg/agentd-server:${SERVER_VERSION}-arm32v7 && \
        docker manifest annotate mrosenbjerg/agentd-server:${SERVER_VERSION} mrosenbjerg/agentd-server:${SERVER_VERSION}-amd64   --arch amd64 --os linux && \
        docker manifest annotate mrosenbjerg/agentd-server:${SERVER_VERSION} mrosenbjerg/agentd-server:${SERVER_VERSION}-arm64v8 --arch arm64 --os linux && \
        docker manifest annotate mrosenbjerg/agentd-server:${SERVER_VERSION} mrosenbjerg/agentd-server:${SERVER_VERSION}-arm32v7 --arch arm --os linux && \
        docker manifest push mrosenbjerg/agentd-server:${SERVER_VERSION}

    - name: Create and push major versioned agentd server manifest
      env:
        DOCKER_CLI_EXPERIMENTAL: enabled
      run: |
        SERVER_VERSION=$(cat server/AgentDeploy.ExternalApi/AgentDeploy.ExternalApi.csproj | grep '<PackageVersion>' | sed 's/.*<PackageVersion>\(.*\)<\/PackageVersion>/\1/' | tr -d '[[:space:]]' | sed -E s/\.[0-9]+$//)
        MAJOR_SERVER_VERSION=$(echo "$SERVER_VERSION" | sed -E s/\.[0-9]+$//)

        docker manifest create mrosenbjerg/agentd-server:${MAJOR_SERVER_VERSION} \
          mrosenbjerg/agentd-server:${MAJOR_SERVER_VERSION}-amd64 \
          mrosenbjerg/agentd-server:${MAJOR_SERVER_VERSION}-arm64v8 \
          mrosenbjerg/agentd-server:${MAJOR_SERVER_VERSION}-arm32v7 && \
        docker manifest annotate mrosenbjerg/agentd-server:${MAJOR_SERVER_VERSION} mrosenbjerg/agentd-server:${MAJOR_SERVER_VERSION}-amd64   --arch amd64 --os linux && \
        docker manifest annotate mrosenbjerg/agentd-server:${MAJOR_SERVER_VERSION} mrosenbjerg/agentd-server:${MAJOR_SERVER_VERSION}-arm64v8 --arch arm64 --os linux && \
        docker manifest annotate mrosenbjerg/agentd-server:${MAJOR_SERVER_VERSION} mrosenbjerg/agentd-server:${MAJOR_SERVER_VERSION}-arm32v7 --arch arm --os linux && \
        docker manifest push mrosenbjerg/agentd-server:${MAJOR_SERVER_VERSION}

    - name: Create and push latest agentd server manifest
      env:
        DOCKER_CLI_EXPERIMENTAL: enabled
      run: |
        SERVER_VERSION=$(cat server/AgentDeploy.ExternalApi/AgentDeploy.ExternalApi.csproj | grep '<PackageVersion>' | sed 's/.*<PackageVersion>\(.*\)<\/PackageVersion>/\1/' | tr -d '[[:space:]]' | sed -E s/\.[0-9]+$//)

        docker manifest create mrosenbjerg/agentd-server:latest \
          mrosenbjerg/agentd-server:${SERVER_VERSION}-amd64 \
          mrosenbjerg/agentd-server:${SERVER_VERSION}-arm64v8 \
          mrosenbjerg/agentd-server:${SERVER_VERSION}-arm32v7 && \
        docker manifest annotate mrosenbjerg/agentd-server:latest mrosenbjerg/agentd-server:${SERVER_VERSION}-amd64   --arch amd64 --os linux && \
        docker manifest annotate mrosenbjerg/agentd-server:latest mrosenbjerg/agentd-server:${SERVER_VERSION}-arm64v8 --arch arm64 --os linux && \
        docker manifest annotate mrosenbjerg/agentd-server:latest mrosenbjerg/agentd-server:${SERVER_VERSION}-arm32v7 --arch arm --os linux && \
        docker manifest push mrosenbjerg/agentd-server:latest


    - name: Create and push specific versioned agentd client manifest
      env:
        DOCKER_CLI_EXPERIMENTAL: enabled
      run: |
        CLIENT_VERSION=$(cat client/package.json | grep version | head -1 | awk -F: '{ print $2 }' | sed 's/[",]//g' | tr -d '[[:space:]]' | sed -E s/\.[0-9]+$//)

        docker manifest create mrosenbjerg/agentd-client:${CLIENT_VERSION} \
          mrosenbjerg/agentd-client:${CLIENT_VERSION}-amd64 \
          mrosenbjerg/agentd-client:${CLIENT_VERSION}-arm64v8 \
          mrosenbjerg/agentd-client:${CLIENT_VERSION}-arm32v7 && \
        docker manifest annotate mrosenbjerg/agentd-client:${CLIENT_VERSION} mrosenbjerg/agentd-client:${CLIENT_VERSION}-amd64   --arch amd64 --os linux && \
        docker manifest annotate mrosenbjerg/agentd-client:${CLIENT_VERSION} mrosenbjerg/agentd-client:${CLIENT_VERSION}-arm64v8 --arch arm64 --os linux && \
        docker manifest annotate mrosenbjerg/agentd-client:${CLIENT_VERSION} mrosenbjerg/agentd-client:${CLIENT_VERSION}-arm32v7 --arch arm --os linux && \
        docker manifest push mrosenbjerg/agentd-client:${CLIENT_VERSION}
        
    - name: Create and push major versioned agentd client manifest
      env:
        DOCKER_CLI_EXPERIMENTAL: enabled
      run: |
        CLIENT_VERSION=$(cat client/package.json | grep version | head -1 | awk -F: '{ print $2 }' | sed 's/[",]//g' | tr -d '[[:space:]]' | sed -E s/\.[0-9]+$//)
        MAJOR_CLIENT_VERSION=$(echo "$CLIENT_VERSION" | sed -E s/\.[0-9]+$//)

        docker manifest create mrosenbjerg/agentd-client:${MAJOR_CLIENT_VERSION} \
          mrosenbjerg/agentd-client:${MAJOR_CLIENT_VERSION}-amd64 \
          mrosenbjerg/agentd-client:${MAJOR_CLIENT_VERSION}-arm64v8 \
          mrosenbjerg/agentd-client:${MAJOR_CLIENT_VERSION}-arm32v7 && \
        docker manifest annotate mrosenbjerg/agentd-client:${MAJOR_CLIENT_VERSION} mrosenbjerg/agentd-client:${MAJOR_CLIENT_VERSION}-amd64   --arch amd64 --os linux && \
        docker manifest annotate mrosenbjerg/agentd-client:${MAJOR_CLIENT_VERSION} mrosenbjerg/agentd-client:${MAJOR_CLIENT_VERSION}-arm64v8 --arch arm64 --os linux && \
        docker manifest annotate mrosenbjerg/agentd-client:${MAJOR_CLIENT_VERSION} mrosenbjerg/agentd-client:${MAJOR_CLIENT_VERSION}-arm32v7 --arch arm --os linux && \
        docker manifest push mrosenbjerg/agentd-client:${MAJOR_CLIENT_VERSION}

    - name: Create and push latest agentd client manifest
      env:
        DOCKER_CLI_EXPERIMENTAL: enabled
      run: |
        CLIENT_VERSION=$(cat client/package.json | grep version | head -1 | awk -F: '{ print $2 }' | sed 's/[",]//g' | tr -d '[[:space:]]' | sed -E s/\.[0-9]+$//)

        docker manifest create mrosenbjerg/agentd-client:latest \
          mrosenbjerg/agentd-client:${CLIENT_VERSION}-amd64 \
          mrosenbjerg/agentd-client:${CLIENT_VERSION}-arm64v8 \
          mrosenbjerg/agentd-client:${CLIENT_VERSION}-arm32v7 && \
        docker manifest annotate mrosenbjerg/agentd-client:latest mrosenbjerg/agentd-client:${CLIENT_VERSION}-amd64   --arch amd64 --os linux && \
        docker manifest annotate mrosenbjerg/agentd-client:latest mrosenbjerg/agentd-client:${CLIENT_VERSION}-arm64v8 --arch arm64 --os linux && \
        docker manifest annotate mrosenbjerg/agentd-client:latest mrosenbjerg/agentd-client:${CLIENT_VERSION}-arm32v7 --arch arm --os linux && \
        docker manifest push mrosenbjerg/agentd-client:latest
